#! /bin/bash

set -e

echo "---------------------------------------------------------"
echo "$(tput setaf 2) Greetings. Preparing to power up and begin diagnostics.$(tput sgr 0)"
echo "---------------------------------------------------------"

INSTALLDIR=$PWD

echo "---------------------------------------------------------"
echo "$(tput setaf 2) Creating symbolic links.$(tput sgr 0)"
echo "---------------------------------------------------------"

ln -fs $PWD/.gitconfig $HOME/.gitconfig
ln -fs $PWD/.zshrc $HOME/.zshrc
ln -fs $PWD/.tmux.conf $HOME/.tmux.conf
ln -fs $PWD/.bashrc $HOME/.bashrc

mkdir -p $HOME/.config/nvim

ln -fs $PWD/nvim/coc-settings.json $HOME/.config/nvim/coc-settings.json
ln -fs $PWD/nvim/init.vim $HOME/.config/nvim/init.vim
ln -fs $PWD/nvim/plugins.vim $HOME/.config/nvim/plugins.vim

echo "---------------------------------------------------------"
echo "$(tput setaf 2) Checking for Homebrew installation.$(tput sgr 0)"
echo "---------------------------------------------------------"

if [ "$OSTYPE" == "darwin"* ]; then
  brew="/usr/local/bin/brew"
else
  brew="/home/linuxbrew/.linuxbrew/bin/brew"

  sudo apt-get update
fi

if [ -f "$brew" ]
then
  echo "---------------------------------------------------------"
  echo "$(tput setaf 2) Homebrew is installed.$(tput sgr 0)"
  echo "---------------------------------------------------------"
else
  if [ "$OSTYPE" == "darwin"* ]; then
    echo "---------------------------------------------------------"
    echo "$(tput setaf 3) Installing Homebrew. Homebrew requires osx command lines tools, please download xcode first$(tput sgr 0)"
    echo "---------------------------------------------------------"
    ruby -e "$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/master/install)"
  else
    sudo apt-get install -y build-essential curl file git
    sh -c "$(curl -fsSL https://raw.githubusercontent.com/Linuxbrew/install/master/install.sh)"
  fi
fi

# disable analytics
brew analytics off

brew update

echo "---------------------------------------------------------"
echo "$(tput setaf 2) Installing system packages.$(tput sgr 0)"
echo "---------------------------------------------------------"

brew reinstall gcc git python3 node tmux zsh ripgrep fzf htop tldr hub

echo "---------------------------------------------------------"
echo "$(tput setaf 2) Installing NeoVim.$(tput sgr 0)"
echo "---------------------------------------------------------"

if [ "$OSTYPE" == "darwin"* ]; then
  rm -rf nvim-osx64
  wget https://github.com/neovim/neovim/releases/download/nightly/nvim-macos.tar.gz
  tar xzvf nvim-macos.tar.gz
  ln -fs $PWD/nvim-osx64/bin/nvim /usr/local/bin/nvim
  rm nvim-macos.tar.gz
else
  sudo apt-get install -y python-dev python-pip python3-dev python3-pip software-properties-common
  sudo add-apt-repository -y ppa:neovim-ppa/unstable
  sudo apt-get install -y neovim
fi

echo "---------------------------------------------------------"
echo "$(tput setaf 2) Installing Python NeoVim client.$(tput sgr 0)"
echo "---------------------------------------------------------"

pip3 install neovim

echo "---------------------------------------------------------"
echo "$(tput setaf 2) Installing node neovim package$(tput sgr 0)"
echo "---------------------------------------------------------"

npm install -g neovim

echo "---------------------------------------------------------"
echo "$(tput setaf 2) Installing oh-my-zsh.$(tput sgr 0)"
echo "---------------------------------------------------------"

if [ ! -d "$HOME/.oh-my-zsh" ]; then
  sh -c "$(curl -fsSL https://raw.githubusercontent.com/robbyrussell/oh-my-zsh/master/tools/install.sh)"
else
  echo "---------------------------------------------------------"
  echo "$(tput setaf 2) oh-my-zsh already installed.$(tput sgr 0)"
  echo "---------------------------------------------------------"
fi

echo "---------------------------------------------------------"
echo "$(tput setaf 2) Installing zsh-autosuggestions.$(tput sgr 0)"
echo "---------------------------------------------------------"
git clone https://github.com/zsh-users/zsh-autosuggestions $HOME/.zsh/zsh-autosuggestions

echo "---------------------------------------------------------"
echo "$(tput setaf 2) Installing tmux plugin manager.$(tput sgr 0)"
echo "---------------------------------------------------------"

if [ ! -d "$HOME/.tmux/plugins/tpm" ]; then
  git clone https://github.com/tmux-plugins/tpm $HOME/.tmux/plugins/tpm
  $HOME/.tmux/plugins/tpm/scripts/install_plugins.sh
fi

echo "---------------------------------------------------------"
echo "$(tput setaf 2) Switching shell to zsh. You may need to logout.$(tput sgr 0)"
echo "---------------------------------------------------------"

sudo sh -c "echo $(which zsh) >> /etc/shells"
chsh -s $(which zsh)

echo "---------------------------------------------------------"
echo "$(tput setaf 2) System update complete. Currently running at 100% power. Enjoy.$(tput sgr 0)"
echo "---------------------------------------------------------"

exit 0
